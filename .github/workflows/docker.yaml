name: Docker

on:
  push:
    branches:
      - netsoc

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest

    env:
      DOCKER_REPO: ghcr.io/netsoc/dex
      VERSION: '2.30.0'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          # TODO: Remove driver-opts once fix is released docker/buildx#386
          driver-opts: image=moby/buildkit:master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: vars
        name: Generate release vars
        run: |
          SHORTREF="$(echo ${{ github.sha }} | cut -c 1-8)"

          echo ::set-output name=version::$VERSION-$SHORTREF-netsoc
          echo ::set-output name=commit_hash::$SHORTREF
          echo ::set-output name=build_date::$(git show -s --format=%cI)

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ env.DOCKER_REPO }}:latest,${{ env.DOCKER_REPO }}:${{ steps.vars.outputs.version }}
          build-args: |
            VERSION=${{ steps.vars.outputs.version }}
            COMMIT_HASH=${{ steps.vars.outputs.commit_hash }}
            BUILD_DATE=${{ steps.vars.outputs.build_date }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.vars.outputs.version }}
            org.opencontainers.image.created=${{ steps.vars.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            org.opencontainers.image.documentation=https://dexidp.io/docs/
